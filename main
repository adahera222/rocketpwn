#!/usr/bin/python
import random

import pygame

from core import colors
from core import elements


def main():
    pygame.init()
    pygame.display.set_caption('RocketPwn')
    mode = (800, 600)
    #mode = (1366, 768)
    FPS = 60

    screen = pygame.display.set_mode(map(int, mode))

    bg = pygame.Surface(mode)
    bg.fill(colors.t)

    ships = pygame.sprite.RenderUpdates()
    bships = pygame.sprite.RenderUpdates()
    ui = pygame.sprite.RenderUpdates()
    with open('lvl/1') as f:
        lines = f.readlines()

    lvl = map(lambda x: x.strip('\n').ljust(9, ' '), lines[1:])
    for line in lvl:
        print line

    s = mode[1] - 120
    map_sq = (mode[0] - (s + 100), 60, s, s)
    pygame.draw.rect(bg, colors.r, map_sq, 1)

    screen.blit(bg, (0, 0))
    clock = pygame.time.Clock()
    pygame.display.flip()

    thrust_progress = elements.Progress((0, 0), (mode[0], 30), colors.g)
    power_progress = elements.Progress((0, mode[1] - 30), (mode[0], 30), colors.dr)
    ship = elements.Ship((400, 300), (0, 1))
    dship = elements.Ship((100, 100), (0, 1), colors.r)
    ui.add(thrust_progress)
    ui.add(power_progress)
    ships.add(ship)
    ships.add(dship)
    running, moving = True, False
    spd = 0.00
    ship.speed = spd
    dship.speed = spd
    ship.force = 0
    nextforce = random.uniform(0.02, 0.08)
    thrust_interval, thrust_duration = 4000, 2000
    thrust_counter, thrust_dcounter = 0, 0
    ticks = 0

    while running:
        time_passed = clock.tick(FPS)
        ticks += time_passed
        thrust_counter += time_passed
        thrust_dcounter += time_passed
        if thrust_counter >= thrust_interval:
            ship.force = nextforce
            nextforce = random.uniform(0.02, 0.08)
            thrust_counter = 0
            thrust_dcounter = 0

        if ship.force > 0:
            ship.force -= 0.0005

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
                break
            if event.type == pygame.KEYDOWN:
                if event.key in (pygame.K_ESCAPE, pygame.K_q):
                    running = False
                    break
                if event.key == pygame.K_SPACE:
                    moving = True
            if event.type == pygame.KEYUP:
                moving = False

        if moving:
            ship.heading.rotate(5)

        dship.heading = ship.dir

        print "s=%f f=%f" % (ship.speed, ship.force)
        print "Ship dir:%f head:%f" % (ship.dir.angle, ship.heading.angle)
        print "Ship dir:%s head:%s" % (ship.dir, ship.heading)

        thrust_progress.update(1. * thrust_counter / thrust_interval)
        if ship.force <= 0:
            power_progress.update(1 - 10. * nextforce)
        else:
            power_progress.update(1 - 10. * ship.force)
        print 'ticks', ticks
        print 'tp', thrust_counter / thrust_interval
        print 'dt', time_passed
        ships.update(time_passed, None)
        ui.clear(screen, bg)
        ships.clear(screen, bg)
        dirty = ui.draw(screen)
        dirty += ships.draw(screen)
        pygame.display.update(dirty)


if __name__ == '__main__':
    main()
